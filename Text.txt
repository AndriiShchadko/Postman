Postman — это HTTP-клиент для тестирования API. HTTP-клиенты тестируют отправку запросов с клиента на сервер и получение ответа от сервера.

API (Application Programming Interface) — это интерфейс для обмена данными с сервера между двумя приложениями или компонентами ПО. Тестировщикам Postman помогает в проектировании дизайна API и создании mock-серверов (имитаторов работы приложения). Например, с помощью Postman можно протестировать, как API регистрирует нового пользователя приложения, как добавляет и удаляет данные о нем на сервере.

Использование Postman
С помощью Postman тестировщик может:

составлять и отправлять HTTP-запросы к API;
создавать коллекции (набор последовательных запросов) и папки запросов для сокращения времени тестирования;
менять параметры запросов (например ключи авторизации и URL);
менять окружения для запросов (например на тестовом стенде, локально или на сервере);
добавлять при вызове API контрольные точки (фиксацию момента передачи данных);
проводить автоматизированное тестирование API по коллекции запросов с помощью Collection Runner.

Освойте профессию
«Тестировщик-автоматизатор»
Подробнее
Освойте профессию«Тестировщик-автоматизатор»
Профессия / 16 месяцев
Тестировщик-автоматизатор
Лучший выбор для быстрого старта в IT

3 910 ₽/мес

6 517 ₽/мес
Подробнее
cables (2)
Тестировщик-автоматизатор
Для работы с серверами программа использует протокол HTTP. Тестировщик отправляет тестовые запросы от клиента на сервер и получает ответ, есть ли ошибка в работе API.

Postman доступен в виде приложения для Windows, Linux и macOS, а также в web-интерфейсе (для его работы нужно установить программу Postman Desktop Agent). Вот как выглядит работа с коллекциями запросов:

работа в программе Postman
Коллекция запросов для теста API. Внутри коллекции запросы можно объединять в папки.
Вкладка запроса из коллекции.
Выбор метода для запроса (GET, POST, PUT, DELETE).
URL запроса на сервере.
Кнопка отправки запроса.
Выбор параметров запроса (ключи и значения — например, только удаленные объекты).
Результат выполнения запроса (код, тело и время ответа, а также размер полученных данных).
Коллекция — это файл проекта со связанными запросами. Обычно запросы для тестирования одного API описывают в одной коллекции. Внутри коллекции запросы можно объединить в папки, например по разным версиям API или тестируемым элементам приложения.

В Postman есть инструмент Collection Runner. Он позволяет одновременно выполнять все запросы из коллекции или папки с нужным количеством итераций и в нужном порядке. После выполнения всех запросов Collection Runner выдает отчет с пометками об успешности запросов и кодами статуса.

Для автоматизированных тестах к коллекциям, папкам и запросам можно применять скрипты на JavaScript. Например, с помощью скриптов можно использовать результат выполнения одного запроса как условия для другого.

Станьте тестировщиком – это лучший выбор для быстрого старта в IT
Подробнее
Станьте тестировщиком – это лучший выбор для быстрого старта в IT
Методы Postman
Чаще всего в работе API используется архитектура RESTful. В этой архитектуре есть четыре стандартных метода запросов к серверам по HTTP:

POST — создание объекта и отправка данных на сервер;
GET — получение информации с сервера;
PUT — обновление объекта;
DELETE — удаление объекта.
В Postman можно протестировать запросы по каждому методу: его нужно выбрать на вкладке запроса. После отправки запроса тестировщик получает ответ в виде кода статуса HTTP. Всего таких статусов 40 в пяти категориях; каждый код помогает понять, правильно ли работает API.

1xx
Информация
Информирование о статусе передачи данных
2xx
Успех
Запрос выполнен успешно
3xx
Перенаправление
Запрос может быть успешно выполнен, но по другому URL
4xx
Ошибка клиента
Указание на ошибку на стороне клиента, из-за которой запрос нельзя выполнить
5xx
Ошибка сервера
Указание на ошибку на стороне сервера, из-за которой он не может обработать запрос
Указание на ошибку на стороне сервера, из-за которой он не может обработать запрос
Читайте также
Как выбрать IT-специальность в новых реалиях? 
Примеры запросов
Вот пример тестирования запроса, который получает идентификатор пользователя от сервера, — GET user id.

Создайте коллекцию. Дайте ей имя, например Useridtest. Откройте вкладку для запроса: он будет сохранен в этой коллекции.
Введите URL запроса. Для обучения можно использовать открытую документацию от разработчиков Postman. Для возврата идентификатора пользователя подойдет URL https://postman-echo.com/get?userId=333. Во вкладке Params автоматически появятся параметры запроса — userid.
Выберите метод запроса. Для получения идентификатора пользователя нужен метод GET.
Отправьте запрос. Нажмите кнопку Send — Postman отправит запрос на свой echo-сервер для учебных запросов.
Получите ответ. Программа выведет тело ответа (программный код) в окно Response, а код статуса появится в меню выше. В учебном примере запрос выполнится успешно: код примет значение 200.
